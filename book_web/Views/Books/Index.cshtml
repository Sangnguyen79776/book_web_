@using X.PagedList.Mvc.Core;
@using X.PagedList

@model book_web.Models.BookViewModel
@{
    ViewData["Title"] = "Index";
        
}

<h4>This is A book Page</h4>
<p>Here is some features that u can perform below:</p>
<div>
    <ul>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="RecentBooks" > Recent Books </a> </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-action="Recommendations">Get some recommendation books  </a>
        </li>

       
    </ul>
    

</div> 


<p>
    @if(User.Identity.IsAuthenticated && User.IsInRole("Admin")){
        @* <a class="btn btn-primary" asp-action="Create">Create New</a> *@
         <a href="@Url.Action("Create", "Books")" class="btn btn-primary">Add New Book</a>
         }
</p>
    
    
</p>
<h1>Book List</h1>
<table class="table">
    <thead>
        <tr>
            <th colspan="4">
             
                <form method="get" asp-action="Index">
                    <input type="text" name="searchString" value="@Model.SearchString" placeholder="Search by Title or Genre" />
                    <button type="submit">Search</button>
                </form>
            </th>
            <th colspan="1">
             
                <a class="btn btn-outline-primary"href="@Url.Action("Index", new { page = 1, sortOrder = (Model.SortOrder == "desc" ? "asc" : "desc") })">
                    Sort by Price @(Model.SortOrder == "desc" ? "Descending" : "Ascending")

                </a>
            </th>
        </tr>
       
        <tr>
           
           <th>Book Title</th>
           <th>Book Price</th>
           <th>Image</th>
           <th>Author</th>
           <th>Rating</th>
           <th>SalesCount</th>
           <th>Stock Quantity</th>
           <th>Genre Name </th>
           <th>DateAdded</th>
           <th>Is Limited Edition </th>
            <th>Published Date </th>
            <th>Last Updated </th>
            <th>Action </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BookTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BookPrice)
            </td>
            <td>
                    @* <img src=" @Html.DisplayFor(modelItem => item.BookCover)" width="100" height="200" /> *@
                    @if (!string.IsNullOrEmpty(item.BookCover))
                    {
                        <img src="@item.BookCover" alt="@item.BookTitle" width="100" height="200" />
                    }
               
            </td>
                <th>
                    @Html.DisplayFor(modelItem => item.Author)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.Rating)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.SalesCount)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.StockQuantity)
                </th>
            <td>
                    @Html.DisplayFor(modelItem => item.Genre.GenreName)
                
            </td>
            
                <th>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                <th>
                        @Html.DisplayFor(modelItem => item.IsLimitedEdition)
                </th>
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.PublishedDate)
                </th>
                <th>
                    @Html.DisplayFor(modelItem => item.LastUpdated)
                </th>
            <td>
                <a class="btn btn-warning"asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                <a class="btn btn-info"asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                <a class="btn btn-danger"asp-action="Delete" asp-route-id="@item.BookId">Delete</a>|
                    <a class="btn btn-outline-secondary" href="@Url.Action("AddBookToCart", "Cart", new { bookId = @item.BookId, quantity = 1 })">Add to Cart</a>
                    <div>
                        <form method="post" asp-action="UpdateStock">
                            <input type="hidden" name="bookId" value="@item.BookId" />
                            <input type="number" name="quantity" min="1" />
                            <button type="submit">Update Stock</button>
                        </form>
                    </div>
                    
            </td>
           
        </tr>
}
    </tbody>
</table>
<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Books", new { page = Model.CurrentPage - 1 ,sortOrder = Model.SortOrder,
                    searchString = Model.SearchString   })">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", "Books", new { page = i,sortOrder = Model.SortOrder 
                    , searchString = Model.SearchString  })">@i</a>
            </li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Books", new { page = Model.CurrentPage + 1 ,sortOrder = Model.SortOrder, 
                    searchString = Model.SearchString  })">Next</a>
            </li>
        }
    </ul>
</nav>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.0-alpha1.20406.1/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/inventoryHub")
        .build();

    connection.on("StockUpdated", function (bookId) {
        // Fetch updated stock details from the server or update the UI dynamically
        alert("Stock for book ID " + bookId + " has been updated!");
    });

    connection.start().catch(function (err) {
        return console.error(err.toString());
    });
</script>
